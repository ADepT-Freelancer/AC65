{"version":3,"file":"static/js/115.2ae767c5.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Dialogs/DialogItem/DialogsItem.module.css?ac9e","components/Dialogs/DialogItem/DialogsItem.jsx","webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://my-app/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"DialogsItem_dialog__6Tjzt\",\"active\":\"DialogsItem_active__GuxJW\"};","import React from \"react\";\r\nimport s from \"./DialogsItem.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogsItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n\r\n  return (\r\n    <div className={s.dialog}>\r\n      <NavLink\r\n        to={path}\r\n        className={({ isActive }) => (isActive ? s.active : undefined)}\r\n      >\r\n        {props.name}\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogsItem;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__NuRjH\",\"button__box\":\"Dialogs_button__box__BkjHO\",\"button\":\"Dialogs_button__iTCMr\"};","// extracted by mini-css-extract-plugin\nexport default {\"messages__box\":\"Message_messages__box__HJUrj\"};","import React from \"react\";\r\nimport s from \"./Message.module.css\";\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div className={s.messages__box}>\r\n  <div className={s.messages}>{props.message}</div>\r\n\r\n</div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport DialogsItem from \"./DialogItem/DialogsItem\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport Message from \"./Message/Message\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\nimport { maxLengthCreator, required } from \"../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst Dialogs = (props) => {\r\n  let dialogsElements = props.state.dialogsPage.dialogs.map((d) => (\r\n    <DialogsItem key={d.id} name={d.name} id={d.id} />\r\n  ));\r\n\r\n  let messagesElements = props.state.dialogsPage.messages.map((m) => (\r\n    <Message key={m.id} message={m.message} />\r\n  ));\r\n\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody);\r\n  };\r\n\r\n  if (!props.isAuth) return <Navigate to={\"/login\"} />;\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div>{dialogsElements}</div>\r\n      <div>\r\n        <div className={s.answers}>{messagesElements}</div>\r\n        <MessageReduxForm onSubmit={addNewMessage} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field\r\n        component={Textarea}\r\n        name=\"newMessageBody\"\r\n        placeholder=\"what's up?\"\r\n        validate={[required, maxLength50]}\r\n\r\n      />\r\n      <div className={s.button__box}>\r\n        <button className={s.button}>Send</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst MessageReduxForm = reduxForm({ form: \"addMessageFormRedux\" })(\r\n  MessageForm\r\n);\r\n\r\nexport default Dialogs;\r\n","import { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport {\r\n  addMessageActionCreator\r\n} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    state: state,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(addMessageActionCreator(newMessageBody));\r\n    },\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nlet mapStateToPropForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Navigate to={\"/login\"} />;\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropForRedirect)(\r\n    RedirectComponent\r\n  );\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n"],"names":["props","path","id","_jsx","className","s","children","NavLink","to","_ref","isActive","undefined","name","message","maxLength50","maxLengthCreator","MessageReduxForm","reduxForm","form","_jsxs","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","dialogsElements","state","dialogsPage","dialogs","map","d","DialogsItem","messagesElements","messages","m","Message","isAuth","values","sendMessage","newMessageBody","Navigate","compose","connect","dispatch","addMessageActionCreator","withAuthRedirect","Dialogs","mapStateToPropForRedirect","auth","Component","RedirectComponent","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","this","_objectSpread","React"],"sourceRoot":""}